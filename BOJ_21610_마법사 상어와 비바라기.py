'''
문제

비바라기를 시전하면 하늘에 비구름을 만들 수 있음
N*N 크기의 격자에서 연습 가능
격자의 칸에는 바구니가 있고
바구니는 칸 전체를 차지
바구니에 저장할 수 있는 물의 양에는 제한이 없다.

(r,c) => r행c열에 있는 바구니를 의미
A[r][c] => (r,c)에 있는 바구니에 저장되어 있는 물의 양을 의미

격자의 가장 왼쪽 윗 칸 = (1,1)
격자의 가장 오른쪽 아랫 칸 = (N,N)

마법사 상어는 연습을 위해
1번 행 - N번 행
1번 열 - N번 열

즉, N번 행의 아래에는 1번 행이, 1번 행의 위에는 N번 행이 있음
1번 열의 왼쪽에는 N번 열이, N번 열의 오른쪽에는 1번 열이 있다.

비바라기 시전
(N, 1), (N, 2), (N-1, 1), (N-1, 2)에 비구름이 생김

i번째 이동 명령은 방향 d와 거리 s로 이루어져 있다.
방향 = 8개의 방향 존재, 8개의 정수로 표현
dr = [0,-1,-1,-1,0,1,1,1]
dc = [-1,-1,0,1,1,1,0,-1]

이동을 명령하면 다음이 순서대로 진행됨

1. 모든 구름이 d방향으로 s칸 이동
2. 구름에서 비가 내려 구름이 있는 칸의 바구니에 저장된 물의 양이 1 증가함
3. 구름이 모두 사라짐
4. 2에서 물이 증가한 칸에 물복사버그 마법 시전
    대각선 방향으로 거리가 1인 칸에 물이 있는 바구니의 수만큼 (r,c)에 있는 바구니의 물이 양이 증가함
    - 경계를 넘어가는 칸은 대각선 방향으로 거리가 1인 칸이 아님
5. 바구니에 저장된 물의 양이 2이상인 모든 칸에 구름이 생기고, 물의 양이 2 줄어듬
    구름이 생기는 칸은 3에서 구름이 사라진 칸이 아니어야 함

m번의 이동이 모두 끝난 후 바구니에 들어있는 물의 양의 합은?

'''


from collections import deque

dr = [0,-1,-1,-1,0,1,1,1]
dc = [-1,-1,0,1,1,1,0,-1]

n,m = map(int,input().split())

board = [list(map(int,input().split())) for _ in range(n)]

초기위치 = [[n-1,0],[n-1,1],[n-2,0],[n-2,1]]

for i in range(m):
    r,c = map(int,input().split())
    c = c%n
    위치 = deque()
    # 이동
    for j in range(len(초기위치)):
        a = 초기위치[j][0] + dr[r-1]*c
        b = 초기위치[j][1] + dc[r-1]*c

        if a<0 or n<=a:
            if a<0:
                a += n
            elif n<=a:
                a -= n
        if b < 0 or n <= b:
            if b < 0:
                b += n
            elif n <= b:
                b -= n
        위치.append([a,b])
        # 1씩 증가
        board[a][b] +=1
    # 물 복사 버그
    for k in range(len(위치)):
        for j in range(1,8,2):
            nr = 위치[k][0] + dr[j]
            nc = 위치[k][1] + dc[j]
            if 0<=nr<n and 0<=nc<n:
                if board[nr][nc] !=0:
                    board[위치[k][0]][위치[k][1]] += 1
    바꿀위치=[]
    for k in range(n):
        for j in range(n):
            if board[k][j] >=2 and [k,j] not in 위치:
                바꿀위치.append([k,j])
                board[k][j] -=2
    초기위치 = 바꿀위치

board = sum(board, [])
print(sum(board))